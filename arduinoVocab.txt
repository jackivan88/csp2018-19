digitalRead()	Reads the value from a specified digital pin, either HIGH or LOW.
digitalWrite()	Write a HIGH or a LOW value to a digital pin.
pinMode()	Configures the specified pin to behave either as an input or an output.
analogRead()	Reads the value from the specified analog pin.
analogReference()	Configures the reference voltage used for analog input (i.e. the value used as the top of the input range).
analogWrite()	Writes an analog value (PWM wave) to a pin.
noTone()	Stops the generation of a square wave triggered by tone(). Has no effect if no tone is being generated.
pulseIn()	Reads a pulse (either HIGH or LOW) on a pin.
pulseInLong()	An alternative to pulseIn() which is better at handling long pulse and interrupt affected scenarios.
shiftIn()	Shifts in a byte of data one bit at a time.
shiftOut()	Shifts out a byte of data one bit at a time.
tone()	Generates a square wave of the specified frequency (and 50% duty cycle) on a pin.
delay()	Pauses the program for the amount of time (in milliseconds) specified as parameter.
delayMicroseconds()	Pauses the program for the amount of time (in microseconds) specified as parameter.
micros()	Returns the number of microseconds since the Arduino board began running the current program.
millis()	Returns the number of milliseconds since the Arduino board began running the current program.
abs()	Calculates the absolute value of a number.
constrain()	Constrains a number to be within a range.
map()	Re-maps a number from one range to another.
max()	Calculates the maximum of two numbers.
min()	Calculates the minimum of two numbers.
pow()	Calculates the value of a number raised to a power.
sq()	Calculates the square of a number: the number multiplied by itself.
sqrt()	Calculates the square root of a number.
cos()	Calculates the cosine of an angle (in radians).
sin()	Calculates the sine of an angle (in radians).
tan()	Calculates the tangent of an angle (in radians).
isAlpha()	Analyse if a char is alpha (that is a letter).
isAlphaNumeric()	Analyse if a char is alphanumeric (that is a letter or a numbers).
isAscii()	Analyse if a char is Ascii.
isControl()	Analyse if a char is a control character.
isDigit()	Analyse if a char is a digit (that is a number).
isGraph()	Analyse if a char is printable with some content (space is printable but has no content).
isHexadecimalDigit()	Analyse if a char is an hexadecimal digit (A-F, 0-9).
isLowerCase()	Analyse if a char is lower case (that is a letter in lower case).
isPrintable()	Analyse if a char is printable (that is any character that produces an output, even a blank space).
isPunct()	Analyse if a char is punctuation (that is a comma, a semicolon, an exlamation mark and so on).
isSpace() Analyse if a char is the space character.
isUpperCase()	Analyse if a char is upper case (that is, a letter in upper case).
isWhitespace()	Analyse if a char is a white space, that is space, formfeed ('\f'), newline ('\n'), carriage return ('\r'), horizontal tab ('\t'), and vertical tab ('\v')).
random() 
randomSeed() 
bit() 
bitClear() 
bitRead() 
bitSet() 
bitWrite() 
highByte() 
lowByte() 
attachInterrupt() 
detachInterrupt() 
interrupts() 
noInterrupts() 
Serial	Used for communication between the Arduino board and a computer or other devices.
stream	Stream is the base class for character and binary based streams.
Keyboard	The keyboard functions enable 32u4 or SAMD micro based boards to send keystrokes to an attached computer through their micro’s native USB port.
Mouse	The mouse functions enable 32u4 or SAMD micro based boards to control cursor movement on a connected computer through their micro’s native USB port.